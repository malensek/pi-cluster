#!/usr/bin/env bash
################################################################################
# provision-new - creates a brand new machine image from scratch.
################################################################################

source "$(cd "$(dirname "$0")" && pwd)/picle-functions.bash"

require bsdtar
require fdisk
require mkfs.f2fs
require mkfs.vfat
require wget

hostname="raspberry-pi"
template=""

################################################################################

print_usage() {
cat <<EOM
Usage: $(basename ${0}) [-h hostname] [-t template_file] target-device
Options:
    * -h hostname       Specifies a hostname for the new host. Defaults to
                            'raspberry-pi'
    * -t template_file  A base file system tree to apply to the new host; see
                            'mktemplate' for creating templates.
EOM
}

if [[ ${#} -lt 1 ]]; then
    print_usage
    exit 1
fi

dev="${1}"
template="${2}"

[[ ! -e "${dev}" ]] && die "Device does not exist: ${dev}"
[[ ! -z "${template}" && ! -e "${template}" ]] && \
    die "Template does not exist: ${template}"
(mount | grep "${dev}" &> /dev/null) && die "Device is mounted! Unmount first."

[[ -z "${template}" ]] && \
    info_delay "Warning: No template image specified. Creating stock install."

info_delay "Partitioning disk..."
cat <<EOM | fdisk "${dev}"
p
o
n
p
1

+100M
t
c
n
p
2


w
EOM

info_delay "Creating file systems..."

mkfs.vfat "${dev}1"
mkfs.f2fs "${dev}2"

info_delay "Mounting file systems..."
mkdir -v /var/tmp/boot
mkdir -v /var/tmp/root
mount -v "${dev}1" /var/tmp/boot
boot_ok=${?}
mount -v "${dev}2" /var/tmp/root
root_ok=${?}

if [[ "${boot_ok}" -ne 0 || "${root_ok}" -ne 0 ]]; then
    die "Failed to mount partitions!"
fi

info_delay "Retrieving latest arch linux image..."
wget -N http://archlinuxarm.org/os/ArchLinuxARM-rpi-2-latest.tar.gz -P /var/tmp

info_delay "Creating root directory..."
bsdtar xvf /var/tmp/ArchLinuxARM-rpi-2-latest.tar.gz -C /var/tmp/root
sync
info_delay "Creating boot directory..."
mv -v /var/tmp/root/boot/* /var/tmp/boot

info_delay "Re-mounting boot into the root file system..."
umount -v /var/tmp/boot
mount -v "${dev}1" /var/tmp/root/boot

if [[ ! -z "${template}" ]]; then
    info_delay "Applying template image..."
    tar xvf "${template}" -C /var/tmp/root
fi

info_delay "Setting hostname: ${hostname}"
echo "${hostname}" > /var/tmp/root/etc/hostname

info_delay "Unmounting file systems..."
umount -v /var/tmp/root/boot
umount -v /var/tmp/root
